
// v7.6.1 full bundle: fixes missing QR1 render, keeps back-scan, step4 gate, step7/8, fullscreen map.
const TOTAL_STEPS = 12;
const EXPECTED_HOST = location.host;
const VERSION = '2025-08-13-v7.6.1';
const CODE_GATES = { 4: { value: '1024' } };
let SND_ITEM, SND_PAPER;
function loadSounds(){ SND_ITEM = new Audio('assets/item.wav'); SND_PAPER = new Audio('assets/paper.wav'); }
function playItem(){ try{ SND_ITEM && SND_ITEM.play(); }catch(e){} }
function playPaper(){ try{ SND_PAPER && SND_PAPER.play(); }catch(e){} }

function qs(s){ return document.querySelector(s); }
function getStepFromURL(){ const url = new URL(window.location.href); const s=url.searchParams.get('step'); let n=parseInt(s||'1',10); if(isNaN(n)||n<1||n>TOTAL_STEPS) n=1; return n; }
function getProgress(){ const v = localStorage.getItem('auguste_progress'); return v?parseInt(v,10):0; }
function setProgress(s){ const c=getProgress(); if(s>c) localStorage.setItem('auguste_progress', String(s)); }
function resetProgress(){ localStorage.removeItem('auguste_progress'); window.location.href = window.location.pathname + '?step=1&v='+VERSION; }

async function startScanner(){
  const step = getStepFromURL();
  const progress = getProgress();
  if(step===9 && progress<8){ alert("Tu dois dâ€™abord valider lâ€™Ã©tape 8 (dÃ©cryptage) avant de pouvoir scanner la suivante."); return; }
  const video = qs('#video'), videoWrap = qs('.videoWrap');
  const scanBtn = qs('#scanBtn'), stopBtn = qs('#stopBtn');
  if(!('BarcodeDetector' in window)){
    alert("Scanner intÃ©grÃ© indisponible sur ce navigateur. Utilisez 'Scanner depuis une photo' ou la camÃ©ra native.");
    qs('.uploadWrap').style.display='block'; 
    return;
  }
  const detector = new BarcodeDetector({ formats:['qr_code'] });
  try{
    const stream = await navigator.mediaDevices.getUserMedia({ video:{ facingMode:'environment' } });
    video.srcObject = stream; await video.play();
    videoWrap.style.display='block'; scanBtn.disabled=true; stopBtn.disabled=false;
    let rafId;
    const tick = async()=>{
      try{
        const codes = await detector.detect(video);
        if(codes && codes.length){ playPaper(); setTimeout(()=>{ handleScannedURL(codes[0].rawValue); }, 120); return; }
      }catch(e){}
      rafId = requestAnimationFrame(tick);
    };
    rafId = requestAnimationFrame(tick);
    stopBtn.onclick = ()=>{ cancelAnimationFrame(rafId); stream.getTracks().forEach(t=>t.stop()); videoWrap.style.display='none'; scanBtn.disabled=false; stopBtn.disabled=true; };
  }catch(err){ alert("Impossible dâ€™ouvrir la camÃ©ra : "+err.message); }
}

function setupUploadScan(){
  const uploadBtn=qs('#uploadBtn'), fileInput=qs('#fileInput');
  uploadBtn.onclick = ()=>{ qs('.uploadWrap').style.display='block'; fileInput.click(); };
  fileInput.addEventListener('change', async e=>{
    const file=e.target.files[0]; if(!file) return;
    if(!('BarcodeDetector' in window)){ alert("Lecture d'image non supportÃ©e. Utilisez la camÃ©ra native."); return; }
    const detector = new BarcodeDetector({ formats:['qr_code'] });
    const url = URL.createObjectURL(file);
    const img = new Image();
    img.onload = async()=>{
      try{
        const bmp = await createImageBitmap(img);
        const res = await detector.detect(bmp);
        if(res && res.length){ playPaper(); setTimeout(()=>{ handleScannedURL(res[0].rawValue); }, 120); } else { alert("Aucun QR dÃ©tectÃ©."); }
      }catch(err){ alert("Erreur de lecture : "+err.message); }
      finally{ URL.revokeObjectURL(url); }
    };
    img.onerror = ()=>{ alert("Image invalide."); URL.revokeObjectURL(url); };
    img.src = url;
  });
}

function handleScannedURL(urlStr){
  try{
    const url=new URL(urlStr);
    if(url.host !== EXPECTED_HOST){ alert("QR inconnu (mauvais domaine)."); return; }
    const stepParam = parseInt(new URLSearchParams(url.search).get('step')||'0',10);
    if(!stepParam){ alert("QR invalide."); return; }
    const progress = getProgress();
    if(stepParam <= progress){
      window.location.href = url.pathname + '?step=' + stepParam + '&v=' + VERSION;
      return;
    }
    if(stepParam === progress + 1){
      window.location.href = url.pathname + '?step=' + stepParam + '&v=' + VERSION;
      return;
    }
    alert("Pas encore prÃªtâ€¦ scanne d'abord l'Ã©tape "+(progress+1)+".");
  }catch{ alert("Lien QR invalide."); }
}

/* -------- Crossword (7) -------- */
const CW_ROWS = ["BICHE","CHAMP","JONCS","BENNE","FLEUR"];
const CW_SIZE = 5;
function buildCrossword(container){
  container.innerHTML = '';
  const grid = document.createElement('div');
  grid.className = 'grid';
  for(let r=0;r<CW_SIZE;r++){
    for(let c=0;c<CW_SIZE;c++){
      const inp = document.createElement('input');
      inp.maxLength = 1; inp.autocomplete='off'; inp.spellcheck=false;
      inp.setAttribute('data-r', r); inp.setAttribute('data-c', c);
      inp.addEventListener('input', (e)=>{
        let v=(e.target.value||'').toUpperCase().replace(/[^A-Z]/g,'');
        if(v.length>1) v=v.slice(-1);
        e.target.value=v;
        if(v && c<CW_SIZE-1){
          const next=container.querySelector('input[data-r="'+r+'"][data-c="'+(c+1)+'"]');
          if(next) next.focus();
        }
      });
      grid.appendChild(inp);
    }
  }
  container.appendChild(grid);
  const clues = document.createElement('div');
  clues.className='clues';
  clues.innerHTML="<strong>DÃ©finitions (horizontales) â€” 5 lettres :</strong><br>1) CervidÃ© des bois â€¢ 2) Terre cultivÃ©e â€¢ 3) Tiges du lavoir â€¢ 4) Chariot de ferme â€¢ 5) Partie de la plante";
  container.appendChild(clues);
  const btn = document.createElement('button');
  btn.textContent="Valider la grille";
  btn.style.marginTop='10px';
  btn.onclick=()=>{
    const target=["BICHE","CHAMP","JONCS","BENNE","FLEUR"];
    for(let r=0;r<CW_SIZE;r++){
      let row='';
      for(let c=0;c<CW_SIZE;c++){
        const val=(grid.children[r*CW_SIZE+c].value||' ').toUpperCase();
        row+=val;
      }
      if(row!==target[r]){ alert("Pas encore bon. Indice : ferme, champ, lavoir, charrette, botanique."); return; }
    }
    for(let r=0;r<CW_SIZE;r++){
      for(let c=0;c<CW_SIZE;c++){
        const cell=grid.children[r*CW_SIZE+c];
        if(c===2) cell.classList.add('hl'); else cell.classList.add('ok');
        cell.disabled=true;
      }
    }
    playItem();
    alert("âœ… Mot secret rÃ©vÃ©lÃ© : CANNE. Ã‰tape validÃ©e !");
    setProgress(7);
  };
  container.appendChild(btn);
}

/* -------- Caesar (8) -------- */
function setupCaesar(){
  const box = qs('#caesarBox');
  box.style.display='block';
  const input = qs('#caesarInput'); input.value='';
}
function validateCaesar(){
  const input = qs('#caesarInput');
  let v=(input.value||'').toUpperCase().replace(/\s+/g,' ').trim();
  if(v==='GAME OF STONES'){
    playItem(); alert('âœ… DÃ©cryptage correct. Ã‰tape validÃ©e !'); setProgress(8);
  } else {
    alert("Ce nâ€™est pas encore Ã§a. Pense Ã  CÃ©sar : dÃ©cale les lettresâ€¦");
  }
}

/* -------- Fullscreen Map (11) -------- */
function openMapFullscreen(){
  const prevOverflow = document.body.style.overflow;
  document.body.style.overflow = 'hidden';
  const overlay = document.createElement('div');
  overlay.className = 'fsOverlay solidBg';
  overlay.setAttribute('role','dialog'); overlay.setAttribute('aria-modal','true');
  overlay.style.zIndex = 99999;
  const inner = document.createElement('div'); inner.className = 'fsInner';
  const img = document.createElement('img'); img.src='assets/carte2025.png'; img.alt='Carte au trÃ©sor';
  const torch = document.createElement('div'); torch.className='torch';
  torch.style.setProperty('--x','50%'); torch.style.setProperty('--y','50%'); torch.style.setProperty('--r','160px');
  const close = document.createElement('button'); close.className='fsClose xonly'; close.textContent='âœ–'; close.setAttribute('aria-label','Fermer la carte');
  inner.appendChild(img); inner.appendChild(torch); inner.appendChild(close); overlay.appendChild(inner); document.body.appendChild(overlay);
  const move=(x,y)=>{ const rect=inner.getBoundingClientRect(); const rx=x-rect.left; const ry=y-rect.top; const r=Math.max(130,Math.min(240,Math.min(rect.width,rect.height)*0.20)); torch.style.setProperty('--r',r+'px'); torch.style.setProperty('--x',rx+'px'); torch.style.setProperty('--y',ry+'px'); };
  overlay.addEventListener('mousemove', e=>move(e.clientX,e.clientY));
  overlay.addEventListener('touchmove', e=>{ const t=e.touches[0]; move(t.clientX,t.clientY); e.preventDefault(); }, {passive:false});
  const closeAll=()=>{ document.body.removeChild(overlay); document.body.style.overflow = prevOverflow; };
  close.addEventListener('click', closeAll);
}
function showMapButton(){
  const wrap = qs('#mapWrap'); if(wrap){ wrap.style.display='none'; }
  const old = document.getElementById('mapOpenBtn'); if(old) old.remove();
  const btn = document.createElement('button'); btn.id='mapOpenBtn'; btn.textContent='ðŸ“œ Ouvrir la carte (plein Ã©cran)'; btn.onclick=openMapFullscreen;
  qs('#story').after(btn);
}

/* -------- Texts -------- */
const TEXTS = {
  1: "Â« Bien le bonjour, Ã©tranger curieux ! Si tu lis ces lignes, câ€™est que tu tâ€™es aventurÃ© sur mes terresâ€¦ et que tu comptes bien fouiller dans mes affaires.\nSache que jâ€™ai laissÃ© derriÃ¨re moi un trÃ©sorâ€¦ ou peutâ€‘Ãªtre une malÃ©dictionâ€¦ ou les deux.\nIl y a cent ans, jâ€™avais dÃ©jÃ  plus de secrets que de dents dans ma bouche â€” et encore, Ã  lâ€™Ã©poque, jâ€™en avais dÃ©jÃ  perdu la moitiÃ©.\nPour commencer, cherche la pierre qui porte le chiffre gravÃ© de mon annÃ©e la plus chÃ¨re. Sous ce regard de granit, tu trouveras le dÃ©but de ton voyage. Â»",
  2: "Â« Elle a nourri plus de ventres que le curÃ© nâ€™a donnÃ© de sermons ! Regardeâ€‘la bien, mais sache que ce que tu cherches nâ€™est pas pour tes yeux seulsâ€¦ Cherche Ã  voir autrement, comme la chouette qui chasse sous la lune. Â»",
  3: "Â« Ah, la vieille marmiteâ€¦ Combien de repas, combien de secrets aussi â€” la doyenne du hameau y perdit mÃªme son dentier. Si tu le retrouves, Ã©vite de goÃ»ter la soupe.\nÃ€ prÃ©sent, cherche lâ€™endroit oÃ¹ la vie commenceâ€¦ protÃ©gÃ©e par une coquille. Â»",
  4: "Â« Mes dames Ã  plumes nâ€™aiment pas les inconnus. Les couleurs te parlent, mais pas comme Ã  lâ€™arcâ€‘enâ€‘ciel : compteâ€‘les, multiplieâ€‘lesâ€¦ et ajoute mille.\nLe chiffre final ouvrira ta prochaine porte. Â»\n\nâ¤· Entre le code pour rÃ©vÃ©ler la suite.",
  5: "Â« Ã‰couteâ€‘moi bien : lÃ  oÃ¹ lâ€™eau danse et chante encore, mÃªme par les plus grandes chaleurs, tu trouveras ce que tu cherches. Ici, les secrets flottent comme les feuilles Ã  lâ€™automneâ€¦ Tire sur la corde, mais pas trop fort : jâ€™ai dÃ©jÃ  perdu deux seaux comme Ã§a. Â»",
  6: "Â« Ahâ€¦ tu as trouvÃ© ma source secrÃ¨te, oubliÃ©e de beaucoup. Ã€ prÃ©sent, fais lâ€™inverse : cherche un endroit secâ€¦ oÃ¹ les calories dorment Ã  lâ€™abri de la pluie. Â»",
  7: "Â« Lâ€™odeur du bois secâ€¦ presque aussi bonne que celle du pain chaud. Remplis la grille, et observe les lettres qui se tiennent bien droites : elles te rÃ©vÃ©leront un objet que jâ€™ai toujours gardÃ© prÃ¨s de moi. Â»",
  8: "Â« VoilÃ  ma vieille canneâ€¦ Elle mâ€™a soutenu dans les champs comme dans les chemins de traverse. Â»\n\nTexte chiffrÃ© :\nJDPH RI VWRQH\n\nâ¤· Ã‰cris ciâ€‘dessous la phrase dÃ©chiffrÃ©e pour valider.",
  9: "Â« Assiedsâ€‘toi donc sur mon fauteuil minÃ©ralâ€¦ moins confortable quâ€™un coussin, mais plus durable. DerriÃ¨re, tu trouveras un morceau de vÃ©ritÃ©â€¦ et une Ã©nigme qui te fera lever les yeuxâ€¦ et peutâ€‘Ãªtre les pieds. Â»",
  10:"Â« Tu veux monter haut ? Alors trouve la chaleur sans feu, celle qui fait lever sans braiseâ€¦ Cherche Ã  sa gauche un recoin non scellÃ©. DerriÃ¨re, ton destin tâ€™attend. Â»",
  11:"Â« Ahâ€¦ le vieux four. Combien de miches, combien de tartesâ€¦ et combien de secrets aâ€‘tâ€‘il cuits en silence ? Voici ma carte. Touchez le bouton ciâ€‘dessous pour lâ€™explorer Ã  la lampe, en plein Ã©cran. Â»",
  12:"Â« Bravo ! Tu as trouvÃ© lâ€™emplacement du trÃ©sor. Marque ta victoireâ€¦ et prÃ©pare le terrain pour le prochain aventurier. Â»"
};

/* -------- Render -------- */
function render(){
  const step = getStepFromURL();
  const progress = getProgress();
  const story = qs('#story');
  const stepNum = qs('#stepNum');
  if(stepNum) stepNum.textContent = step;

  // Reset sections
  document.querySelectorAll('.lock').forEach(n=>n.remove());
  qs('#codeGate').style.display='none';
  qs('#crossword').style.display='none';
  qs('#caesarBox').style.display='none';
  const mapWrap = qs('#mapWrap'); if(mapWrap) mapWrap.style.display='none';

  // Fallback to ensure something is visible at QR1 even if TEXTS has an issue
  const fallback = "Bienvenue dans lâ€™aventure dâ€™Auguste Le Du. Si ce message apparaÃ®t, rechargez la page ou videz le cache (ou ouvrez un onglet privÃ©).";

  story.textContent = TEXTS[step] || TEXTS[1] || fallback;

  if(step===1){
    if(progress<1) setProgress(1);
    return;
  }

  // Lock logic
  if(step > progress + 1){
    const lock = document.createElement('div'); lock.className='lock';
    lock.textContent = "Pas encore prÃªtâ€¦ scanne dâ€™abord lâ€™Ã©tape " + (progress+1) + ".";
    story.after(lock);
    const scanBtn = qs('#scanBtn'); if(scanBtn) scanBtn.disabled = true;
    return;
  }

  if(step < progress){
    const info = document.createElement('div'); info.className='lock';
    info.style.background='#eef6ea'; info.style.borderColor='#9cc59a'; info.style.color='#2f5530';
    info.textContent = "Ã‰tape dÃ©jÃ  validÃ©e. Tu peux relire, ou scanner lâ€™Ã©tape " + (progress+1) + " pour poursuivre.";
    story.after(info);
  }

  const gated = new Set([4,7,8]);
  if(step === progress + 1 && !gated.has(step)){
    setProgress(step);
  }

  if(step===4){ qs('#codeGate').style.display='block'; }
  if(step===7){ const cw=qs('#crossword'); cw.style.display='block'; buildCrossword(cw); }
  if(step===8){ qs('#caesarBox').style.display='block'; }
  if(step===11){ showMapButton(); }
}

window.addEventListener('DOMContentLoaded', render);
